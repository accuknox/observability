syntax = "proto3";

option go_package = "github.com/accuknox/observability/proto/aggregator";

package aggregator;

//Define Aggregator - To fetch Network and System Logs 
service Aggregator {
    rpc FetchNetworkLogs (NetworkLogsRequest) returns (NetworkLogsResponse);
    rpc FetchSystemLogs (SystemLogsRequest) returns (SystemLogsResponse);
}

//Filter Network Logs 
message NetworkLogsRequest {
    
    //Limit the Number of Logs Response
    int64 limit = 1; 
    
    //Get Logs Based on Time from current time
    string since = 2;
    
    //Get only log count
    bool count = 3;
    
    //Get logs based on direction, that's Ingress/Egress 
    string direction = 4;
    
    //Get logs based on type, that's L7/L3_L4
    string type = 5;
    
    //Get logs based on verdict, that's Forward/Dropped/Error/Audit
    repeated string verdict = 6;
    
    //Get logs based on L4 protocol, that's TCP/UDP/ICMPv4/ICMPv6
    string protocol = 7;
    
    //Get logs based on l7, thats DNS/Kafka/HTTP
    string l7 = 8;

    //Get logs based on source pod name
    repeated string sourcePod = 9;

    //Get logs based on source namespace name
    repeated string sourceNamespace = 10;

    //Get logs based on destination pod name
    repeated string destinationPod = 11;

    //Get logs based on destination namespace name
    repeated string destinationNamespace = 12;

    //Get logs based on node 
    repeated string node = 13;

    //Get logs based on source label
    string sourceLabel = 14;

    //Get logs based on destination label 
    string destinationLabel = 15;

}

//Filter System Logs 
message SystemLogsRequest {
    
    //Limit the Number of Logs Response
    int64 limit = 1;
    
    //Get Logs Based on Time from current time
    string since = 2;
    
    //Get only log count
    bool count = 3;
    
    //Get namespace based logs
    repeated string namespace = 4;

    //Get logs based on type, that's Container/Host 
    string type = 5;

    //Get logs based on operation, that's File/Process/Network
    repeated string operation = 6;

    //Get logs based on pod name 
    repeated string pod = 7;

    //Get logs based on host name
    repeated string host = 8;

    //Get logs based on source name
    string source = 9;

    //Get logs based on resource name
    string resource = 10;

    //Get logs based on container name
    repeated string container = 11;

}       

//Response of Network Logs 
message NetworkLogsResponse {
   repeated NetworkLog logs = 1;
   int64 count = 2;
}

//Response of System Logs 
message SystemLogsResponse {
   repeated SystemLog logs = 1;
   int64 count = 2;
}

message NetworkLog {
    string Verdict = 1;
    string Ip_source = 4; 
    string Ip_destination = 5;
    string Ip_version = 6; 
    bool Ip_encrypted = 7; 
    uint32 L4_tcp_source_port = 8;
    uint32 L4_tcp_destination_port = 9;
    uint32 L4_udp_source_port = 10 ;
    uint32 L4_udp_destination_port = 11;
    uint32 L4_icmpv4_type = 12;
    uint32 L4_icmpv4_code = 13;
    uint32 L4_icmpv6_type = 14;
    uint32 L4_icmpv6_code = 15;
    string Source_namespace = 18;
    string Source_labels = 19;
    string Source_pod_name = 20;
    string Destination_namespace = 23;
    string Destination_labels = 24;
    string Destination_pod_name = 25;
    string Type = 26;
    string Node_name = 27;
    string L7_type = 30; 
    string L7_dns_cnames = 35; 
    string L7_dns_observation_source = 36; 
    uint32 L7_http_code = 40;
    string L7_http_method = 41;
    string L7_http_url = 42;
    string L7_http_protocol = 43;
    string L7_http_headers = 44;
    int32 Event_type_type = 50;
    int32 Event_type_sub_type = 51;
    string Source_service_name = 52;
    string Source_service_namespace = 53;
    string Destination_service_name = 54;
    string Destination_service_namespace = 55;
    string Traffic_direction = 56;
    string Trace_observation_point = 58;
    string Drop_reason_desc = 59;
    bool Is_reply = 60;
    int64 Start_time = 65;
    int64 Updated_time = 66;
    int64 Total = 67;
}

message SystemLog {
    string clusterName = 1;
    string hostName = 2;
    string namespace = 3;
    string podName = 4;
    string containerID = 5;
    string containerName = 6;
    int32 uid = 7;
    string type = 8;
    string source = 9;
    string operation = 10;
    string resource = 11;
    string data = 12;
    int64 startTime = 13;
    int64 updateTime = 14;
    string result = 15;
    int64 total = 16;

}
